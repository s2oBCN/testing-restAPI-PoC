#!/bin/bash
### BEGIN INIT INFO
# Provides:          IcaImgSrv
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: IcaImgSrv
# Description:
#
### END INIT INFO
#
# chkconfig: 345 91 10
# description: Start IcaImgSrv
#

# Source function library
. /etc/rc.d/init.d/functions

#Get config

. /etc/sysconfig/network

[ "${NETWORKING}" = "no" ] && exit 0

serviceName="IcaImageGenSrv"
workingDir="${IcaImgSrvInstallPath}" ## this variable must be replaced
jdk="$workingDir/bin/jdk/bin/java"
cmd="$jdk -jar $workingDir/lib/IcaImageGenSrv.jar --spring.config.location=\"$workingDir/conf/application.yml\""
user="s2oIcaImg"

pid_file="/var/run/${serviceName}.pid"
stderr_log="$workingDir/logs/${serviceName}.err"

get_pid() {
   cat "$pid_file"
}

is_running() {
   [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
   start)
   if is_running; then
       echo "Already started"
   else
       echo "Starting $serviceName"
       cd "$workingDir"
       if [ -z "$user" ]; then
           $cmd 2>> "$stderr_log" &
       else
           su "$user" -s /bin/sh -c "$cmd" >> /dev/null 2>> "$stderr_log" &
       fi
       echo $! > "$pid_file"
       if ! is_running; then
           echo "Unable to start, see $stderr_log for more details"
           exit 1
       fi
   fi
   ;;
   stop)
   if is_running; then
       echo -n "Stopping $serviceName.."
       kill `get_pid`
       for i in {1..10}
       do
           if ! is_running; then
               break
           fi

           echo -n "."
           sleep 1
       done
       echo

       if is_running; then
           echo "Not stopped; may still be shutting down or shutdown may have failed"
           exit 1
       else
           echo "Stopped"
           if [ -f "$pid_file" ]; then
               rm "$pid_file"
           fi
       fi
   else
       echo "Not running"
   fi
   ;;
   restart)
   $0 stop
   if is_running; then
       echo "Unable to stop, will not attempt to start"
       exit 1
   fi
   $0 start
   ;;
   status)
   if is_running; then
       echo "Running"
   else
       echo "Stopped"
       exit 1
   fi
   ;;
   *)
   echo "Usage: $0 {start|stop|restart|status}"
   exit 1
   ;;
esac

exit 0